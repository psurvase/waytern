import type {NextApiRequest, NextApiResponse} from 'next'import {getSession} from 'next-auth/react';import prisma from '../../../utility/prisma'// DELETE /api/device/:idexport default async function handle(req: NextApiRequest, res: NextApiResponse) {    const id = req.query?.id?.toString();    const session = await getSession({req})    if (!session) {        res.status(401).send({message: 'Unauthorized: Access is denied due to invalid credentials'})    }    if (req.method === "DELETE") {        const device = await prisma.device.delete({                where: {id: id},        });        res.json(device);     } else if (req.method === "GET") {        const device = await prisma.device.findUnique({            where :{id : id},        })        res.json(device);    } else if (req.method === "PUT") {        const {                name,                status,                xCoordinate,                yCoordinate,                macId,        } = req.body;        const device = await prisma.device.update({            where :{id: id},            data :{                    name,                    status,                    xCoordinate,                    yCoordinate,                    macId,            }        })        res.json(device);    }else {        throw new Error(            `The HTTP ${req.method} method is not supported at this route.`        );    }}